<?xml version="1.0" encoding="UTF-8"?>
<project name="CloudHashMap" default="build" basedir=".">
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="examples.dir" value="examples" />
	<property name="dist.dir" value="dist" />
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="build" />
	<property name="doc.dir" value="doc" />
	<property name="conf.dir" value="conf" />
	<property name="api-doc.dir" value="docs/api-docs" />
	<property name="build.slave-classes" value="${build.dir}/slave/WEB-INF/classes" />
	<property name="build.master-classes" value="${build.dir}/master/WEB-INF/classes" />
	<property name="build.slave" value="${build.dir}/slave" />
	<property name="build.master" value="${build.dir}/master" />
	<property name="build.test-classes" value="${build.dir}/test-classes" />
	<property name="build.example-classes" value="${build.dir}/example-classes" />
	<property name="coverage.dir" value="coverage" />
	<property name="javac.debug" value="on" />
	<property name="build.compiler" value="modern" />
	<property name="prompt" value="no" />
	<patternset id="java.libs" includes="**/*.jar,**/*.zip" />

	<path id="mylibs">
		<fileset dir="${lib.dir}">
			<patternset refid="java.libs" />
		</fileset>
		<fileset dir="${dist.dir}">
			<patternset refid="java.libs" />
		</fileset>
	</path>

	<path id="emma.lib">
		<pathelement location="${lib.dir}/emma.jar" />
		<pathelement location="${lib.dir}/emma_ant.jar" />
	</path>

	<taskdef resource="emma_ant.properties" classpathref="emma.lib" />

	<target name="emma" description="turns on EMMA's on-the-fly instrumentation mode">
		<property name="emma.enabled" value="true" />
	</target>

	<target name="prepare">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.slave}" />
		<mkdir dir="${build.master}" />
		<mkdir dir="${build.slave-classes}" />
		<mkdir dir="${build.master-classes}" />		
		<mkdir dir="${build.test-classes}" />
		<mkdir dir="${build.example-classes}" />
		<mkdir dir="${coverage.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${api-doc.dir}" />
	</target>

	<target name="build" depends="clean,prepare">
		<javac classpathref="mylibs" destdir="${build.slave-classes}"
			debug="on" debuglevel="lines,vars,source" deprecation="on" target="1.5">
			<src path="${src.dir}" />
			<include name="com/sdm/largeMap/slave/**" />
			<include name="com/sdm/largeMap/utils/**" />
			<exclude name="com/sdm/largeMap/master/**" />
		</javac>

		<javac classpathref="mylibs" destdir="${build.master-classes}"
			debug="on" debuglevel="lines,vars,source" deprecation="on" target="1.5">
			<src path="${src.dir}" />
			<include name="com/sdm/largeMap/master/**" />
			<include name="com/sdm/largeMap/utils/**" />
			<exclude name="com/sdm/largeMap/slave/**" />
		</javac>

		<copy todir="${build.slave}/WEB-INF">
			<fileset dir="${conf.dir}" includes="slave-web.xml" />
		</copy>
		<move file="${build.slave}/WEB-INF/slave-web.xml" tofile="${build.slave}/WEB-INF/web.xml" />
		<jar jarfile="${dist.dir}/CloudHashMap-Slave.war" basedir="${build.slave}" />

		<copy todir="${build.master}/WEB-INF">
			<fileset dir="${conf.dir}" includes="master-web.xml" />
		</copy>
		<move file="${build.master}/WEB-INF/master-web.xml" tofile="${build.master}/WEB-INF/web.xml" />		
		<jar jarfile="${dist.dir}/CloudHashMap-Master.war" basedir="${build.master}" />
		

	</target>

	<target name="clean">
		<delete quiet="true">
			<fileset dir="${build.dir}" includes="**/*" />
			<fileset dir="${coverage.dir}" includes="**/*" />
			<fileset dir="${dist.dir}" includes="**/*" />
			<fileset dir="${api-doc.dir}" includes="**/*" />
		</delete>
		<delete quiet="true" dir="${coverage.dir}" />
		<delete quiet="true" dir="${build.dir}" />
		<delete quiet="true" dir="${dist.dir}" />
		<delete quiet="true" dir="${api-doc.dir}" />
	</target>

	<!-- <target name="debug" depends="clean,build">
		<java jar="dist/FLVParser.jar" fork="true">
			<arg value="${config}" />
			<sysproperty key="DEBUG" value="true" />
			<jvmarg
				value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8001" />
		</java>
	</target>



	<target name="test-debug" depends="build,emma,clean">
		<emmajava enabled="${emma.enabled}" libclasspathref="emma.lib"
			sourcepath="${src.dir}" classpathref="mylibs" classname="org.junit.runner.JUnitCore">
			<arg value="com.sdm.FLVParser.test.FLVParserTestSuite" />
			<jvmarg
				value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8001" />
			<html outfile="${coverage.dir}/coverage.html" />
			<filter includes="com.sdm.FLVParser.*" />
		</emmajava>
	</target>

	<target name="test" depends="build,emma,clean">
		<emmajava enabled="${emma.enabled}" libclasspathref="emma.lib"
			sourcepath="${src.dir}" classpathref="mylibs" classname="org.junit.runner.JUnitCore"
			maxmemory="1g">
			<arg value="com.sdm.FLVParser.test.FLVParserTestSuite" />
			<html outfile="${coverage.dir}/coverage.html" />
			<filter includes="com.sdm.FLVParser.*" />
		</emmajava>
	</target> 

	<target name="release" depends="build,clean">
		<delete quiet="true" dir="${release}" />
		<copy todir="${release}/dist">
			<fileset dir="${dist.dir}" includes="**/*" />
		</copy>
		<copy todir="${release}/conf">
			<fileset dir="${conf.dir}" includes="**/*" />
		</copy>
		<copy todir="${release}/lib">
			<fileset dir="${lib.dir}" includes="**/*" />
		</copy>
		<copy todir="${release}/src">
			<fileset dir="${src.dir}" includes="**/*" />
		</copy>
		<copy todir="${release}/bin">
			<fileset dir="${bin.dir}" includes="**/*" />
		</copy>

		<copy todir="${release}">
			<fileset dir="." includes="manifest.mf,build.xml" />
		</copy>
		<zip destfile="${release}.zip" basedir="${release}" />
	</target>

	<target name="doc" depends="build">
		<javadoc packagenames="com.sdm.FLVParser.*" sourcepath="${src.dir}"
			defaultexcludes="yes" destdir="${api-doc.dir}" author="true" version="true"
			use="true" windowtitle="FLV Parser API Docs">
			<doctitle>
				<![CDATA[<h1>FLV Parser API Docs</h1>]]></doctitle>
			<bottom>
			<![CDATA[<i>Copyright &#169; 2009 SDM Corp. All Rights Reserved.</i>]]></bottom>
		</javadoc>
	</target>-->


</project>